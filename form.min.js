class Form{constructor({form:t,url:e="",ajax_data:s={},validators:a={},custom_ui:i=!1,test_mode:o=!1,loading_target:r=""}){this.form=t,this.submit_button=t.find("[type=submit]"),this.url=e,this.ajax_data=s,this.loading_target=r||this.submit_button,this.validators={email:/\S+@\S+\.\S+/,tel:/^.[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\s\./0-9]*$/g,password:/^.{8,32}$/,...a},this.custom_ui=i,this.test_mode=o,this.events()}events(){this.custom_ui?this.submit_button.on("click",t=>this.submitButtonProcess(t)):this.form.on("submit",t=>this.submitButtonProcess(t))}submitButtonProcess(t){t.preventDefault(),this.loading_target.hasClass("loading")||(this.collectFormFields(),this.checkFormFields()?this.sendAjax():this.form.find(".error").eq(0).focus())}sendAjax(){this.test_mode&&console.log(this.ajax_data),this.loading_target.addClass("loading"),$.post(this.url,this.ajax_data,t=>{this.test_mode&&console.log(t),this.form.trigger("sent",t);let e=JSON.parse(t);e&&1==e.success&&setTimeout(()=>{this.form.trigger("reset")},1e3)}).fail(t=>{alert(`Error: ${t.status} ${t.statusText}`)}).always(()=>{this.loading_target.removeClass("loading")})}collectFormFields(){let t=this;this.ajax_data.fields={},this.form_fields=[],this.form.find("input:not([type=submit]):not([type=checkbox]):not([type=radio]), input:checked, select, textarea").each(function(){t.collectField($(this))})}checkFormFields(){for(let t of this.form_fields)this.validateInput(t),this.checkInput(t);return!this.form.find(".error").length}validateInput(t){t.value.length&&this.validators[t.type]&&null==t.value.match(this.validators[t.type])&&(t.valid=!1)}collectField(t){let e=t.attr("name"),s=t.attr("id"),a=this.form.find(`[data-subject-for=${e}]`).text()||t.attr("placeholder")||this.form.find(`label[for=${s}]`).text()||t.attr("name");e||this.onError("Some fields don't have attribute [name]");let i={obj:t,value:t.val(),type:t.attr("type"),required:t.prop("required"),subject:a,valid:!0};this.ajax_data.fields[e]?this.ajax_data.fields[e].value?this.ajax_data.fields[e].value+=", "+i.value:i.value:this.ajax_data.fields[e]={subject:i.subject,value:i.value},this.form_fields.push(i)}checkInput(t){if(t.required&&!t.value||!t.valid)return t.obj.addClass("error"),this.onInputStatusChanged(t),void t.obj.off("input").on("input",e=>{t.value=$(e.target).val(),t.valid=!0,this.validateInput(t),this.checkInput(t)});t.obj.hasClass("error")&&(t.obj.removeClass("error"),this.onInputStatusChanged(t))}onInputStatusChanged(t){this.form.trigger("field_status_changed",[t.obj,t.required,t.valid])}onError(t){throw new Error(t)}}